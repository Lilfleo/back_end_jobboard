-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.advertisement
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 0 MINVALUE 0 MAXVALUE 2147483647 CACHE 1 ),
    name text COLLATE pg_catalog."default" NOT NULL,
    salary integer NOT NULL,
    place text COLLATE pg_catalog."default" NOT NULL,
    long_desc text COLLATE pg_catalog."default",
    short_desc text COLLATE pg_catalog."default" NOT NULL,
    id_user integer,
    id_comp integer,
    CONSTRAINT advertisement_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.company
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    name text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT compagny_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.job_application
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    id_ad integer NOT NULL,
    email text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT job_application_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.roles
(
    id serial NOT NULL,
    role_name text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT roles_pkey PRIMARY KEY (id),
    CONSTRAINT roles_role_name_key UNIQUE (role_name)
);

CREATE TABLE IF NOT EXISTS public.users
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    first_name text COLLATE pg_catalog."default",
    last_name text COLLATE pg_catalog."default",
    email text COLLATE pg_catalog."default" NOT NULL,
    password text COLLATE pg_catalog."default" NOT NULL,
    id_role integer,
    CONSTRAINT users_pkey PRIMARY KEY (id),
    CONSTRAINT email_user UNIQUE (email)
);

ALTER TABLE IF EXISTS public.advertisement
    ADD CONSTRAINT id_comp FOREIGN KEY (id_comp)
    REFERENCES public.company (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
CREATE INDEX IF NOT EXISTS fki_id_comp
    ON public.advertisement(id_comp);


ALTER TABLE IF EXISTS public.advertisement
    ADD CONSTRAINT id_user FOREIGN KEY (id_user)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
CREATE INDEX IF NOT EXISTS fki_id_user
    ON public.advertisement(id_user);


ALTER TABLE IF EXISTS public.job_application
    ADD CONSTRAINT key_ad FOREIGN KEY (id_ad)
    REFERENCES public.advertisement (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
CREATE INDEX IF NOT EXISTS fki_key_comp
    ON public.job_application(id_ad);

END;